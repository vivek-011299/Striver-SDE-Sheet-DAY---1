/*
*
Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, 
and return an array of the non-overlapping intervals that cover all the intervals in the input.
*
*/


Solution :-

 vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int> > ans;
        vector<int> temp(2);
        sort(intervals.begin(),intervals.end());
        temp[0]=intervals[0][0];
        temp[1]=intervals[0][1];
        for(int i=1;i<intervals.size();i++)
        {
            if(intervals[i][0]<=temp[1])
            {
                temp[1]=max(intervals[i][1],temp[1]);
            }
            else
            {
                ans.push_back(temp);
                temp[0]=intervals[i][0];
                temp[1]=intervals[i][1];
            }
        } 
        ans.push_back(temp);
        return ans;
    }
